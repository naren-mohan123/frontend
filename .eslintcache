[{"/home/naren/Desktop/project/React/confusion/src/Redux/leaders.js":"1","/home/naren/Desktop/project/React/confusion/src/components/MainComponent.js":"2","/home/naren/Desktop/project/React/confusion/src/Redux/configureStore.js":"3","/home/naren/Desktop/project/React/confusion/src/reportWebVitals.js":"4","/home/naren/Desktop/project/React/confusion/src/components/HomeComponent.js":"5","/home/naren/Desktop/project/React/confusion/src/components/HeaderComponent.js":"6","/home/naren/Desktop/project/React/confusion/src/Redux/promotions.js":"7","/home/naren/Desktop/project/React/confusion/src/components/DishdetailComponent.js":"8","/home/naren/Desktop/project/React/confusion/src/Redux/ActionTypes.js":"9","/home/naren/Desktop/project/React/confusion/src/Redux/ActionCreators.js":"10","/home/naren/Desktop/project/React/confusion/src/shared/baseUrl.js":"11","/home/naren/Desktop/project/React/confusion/src/Redux/comments.js":"12","/home/naren/Desktop/project/React/confusion/src/components/MenuComponent.js":"13","/home/naren/Desktop/project/React/confusion/src/App.js":"14","/home/naren/Desktop/project/React/confusion/src/index.js":"15","/home/naren/Desktop/project/React/confusion/src/components/AboutComponent.js":"16","/home/naren/Desktop/project/React/confusion/src/Redux/dishes.js":"17","/home/naren/Desktop/project/React/confusion/src/Redux/forms.js":"18","/home/naren/Desktop/project/React/confusion/src/components/ContactComponent.js":"19","/home/naren/Desktop/project/React/confusion/src/components/FooterComponent.js":"20"},{"size":594,"mtime":1613910345386,"results":"21","hashOfConfig":"22"},{"size":3863,"mtime":1613932489061,"results":"23","hashOfConfig":"22"},{"size":741,"mtime":1613931998754,"results":"24","hashOfConfig":"22"},{"size":362,"mtime":1607941976358,"results":"25","hashOfConfig":"22"},{"size":2019,"mtime":1613906605434,"results":"26","hashOfConfig":"22"},{"size":5554,"mtime":1609439252838,"results":"27","hashOfConfig":"22"},{"size":665,"mtime":1613757518986,"results":"28","hashOfConfig":"22"},{"size":8258,"mtime":1613904202339,"results":"29","hashOfConfig":"22"},{"size":587,"mtime":1613930582743,"results":"30","hashOfConfig":"22"},{"size":6325,"mtime":1613932766355,"results":"31","hashOfConfig":"22"},{"size":48,"mtime":1613757166434,"results":"32","hashOfConfig":"22"},{"size":523,"mtime":1613828531377,"results":"33","hashOfConfig":"22"},{"size":2335,"mtime":1613757666858,"results":"34","hashOfConfig":"22"},{"size":583,"mtime":1609697660249,"results":"35","hashOfConfig":"22"},{"size":642,"mtime":1608744011919,"results":"36","hashOfConfig":"22"},{"size":4880,"mtime":1613933029658,"results":"37","hashOfConfig":"22"},{"size":641,"mtime":1613907286862,"results":"38","hashOfConfig":"22"},{"size":171,"mtime":1613932178857,"results":"39","hashOfConfig":"22"},{"size":10815,"mtime":1613932140659,"results":"40","hashOfConfig":"22"},{"size":2752,"mtime":1608880672902,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7yfqg9",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/naren/Desktop/project/React/confusion/src/Redux/leaders.js",[],"/home/naren/Desktop/project/React/confusion/src/components/MainComponent.js",["88"],"import React, {Component} from \"react\";\nimport Header from \"./HeaderComponent\";\nimport Home from \"./HomeComponent\";\nimport About from \"./AboutComponent\";\nimport Menu from \"./MenuComponent\";\nimport Contact from \"./ContactComponent\";\nimport DishDetail from \"./DishdetailComponent\";\nimport Footer from \"./FooterComponent\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { postComment, fetchDishes, fetchComments, fetchPromos,fetchLeaders,postFeedback } from \"../Redux/ActionCreators\";import { actions } from \"react-redux-form\";\nimport { CSSTransition,TransitionGroup } from \"react-transition-group\";\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  postComment : (dishId,rating,author,comment) => dispatch(postComment(dishId,rating,author,comment)),\n  postFeedback : (firstname,lastname,telnum,email,agree,contactType,message) => dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message)),\n  fetchDishes : () => {dispatch(fetchDishes())},\n  resetFeedbackForm : () => {dispatch(actions.reset(\"feedback\"))},\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  fetchLeaders : () => dispatch(fetchLeaders()),\n});\n\nclass Main extends Component {\n  constructor(props){\n    super(props);\n  }\n  \n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render() {\n    \n    const HomePage = () => {\n      return(\n        <Home dish ={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n              DishesLoading = {this.props.dishes.isLoading}\n              DishesErrMess = {this.props.dishes.errMess}\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n              promoLoading={this.props.promotions.isLoading}\n              promoErrMess={this.props.promotions.errMess}\n              leader ={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n              leadersLoading={this.props.leaders.isLoading}\n              leadersErrMess={this.props.leaders.errMess}\n        />\n      );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \n            isLoading = {this.props.dishes.isLoading}\n            ErrMess = {this.props.dishes.errMess}\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n            commentsErrMess={this.props.comments.errMess}\n            postComment = {this.props.postComment}  \n          />\n            );\n    };\n\n    return (\n      <div className=\"App\">\n        <Header/>\n        <TransitionGroup>\n          <CSSTransition key = {this.props.location.key} classNames=\"page\" timeout={300}>\n          <Switch location = {this.props.location}>\n              <Route path='/home' component={HomePage} />\n              <Route exact path=\"/aboutus\" component={()=> <About leaders ={this.props.leaders}/>}/>\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n              <Route path='/menu/:dishId' component={DishWithId} />\n              <Route exact path=\"/contactus\" component={ () => <Contact postFeedback = {this.props.postFeedback} resetFeedbackForm = {this.props.resetFeedbackForm}  />}/>\n              <Redirect to=\"/home\" />\n          </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","/home/naren/Desktop/project/React/confusion/src/Redux/configureStore.js",[],["89","90"],"/home/naren/Desktop/project/React/confusion/src/reportWebVitals.js",[],"/home/naren/Desktop/project/React/confusion/src/components/HomeComponent.js",[],"/home/naren/Desktop/project/React/confusion/src/components/HeaderComponent.js",["91","92","93"],"import React, { Component } from \"react\";\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Form, FormGroup, Button, Col, Label, Input , FormFeedback,\n        Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Header extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isNavOpen : false,\n            isModalOpen : false\n        }\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav(){\n        this.setState({\n            isNavOpen : !this.state.isNavOpen\n        });\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen : !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event){\n        this.toggleModal();\n        alert(\"username :\"+this.username.value + \"password :\" + \"remember : \"+ this.remember.checked);\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <Navbar dark expand=\"md \">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav}/>\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\n                            alt = \"Ristorante Con Fusion\"/>\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/home\">\n                                    <span className=\"fa fa-home fa-lg\"></span>Home\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                    <span className=\"fa fa-info fa-lg\"></span>About Us\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/menu\">\n                                    <span className=\"fa fa-list fa-lg\"></span>Menu\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\n                                    <span className=\"fa fa-address-card fa-lg\"></span>Contact Us\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <Button outline onClick={this.toggleModal} >\n                                    <span className=\"fa fa-sign-in fa-lg\">Login</span>\n                                </Button>\n                            </NavItem>\n                        </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                            <h1>Ristorante con Fusion</h1>\n                            <p>We take inspiration from the World's best cuisines, \n                                and create a unique fusion experience. \n                                Our lipsmacking creations will tickle your culinary senses!\n                            </p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle = {this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                        <FormGroup>\n                                <Label htmlFor=\"username\" >UserName</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                        placeholder=\"User Name\"\n                                        innerRef = {(Input) => this.username = Input}/>\n                        </FormGroup>\n                        <FormGroup>\n                                <Label htmlFor=\"password\" >Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                        placeholder=\"Password\"\n                                        innerRef = {(Input) => this.password = Input}/>\n                        </FormGroup>\n                        <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","/home/naren/Desktop/project/React/confusion/src/Redux/promotions.js",[],"/home/naren/Desktop/project/React/confusion/src/components/DishdetailComponent.js",["94","95","96","97"],"/home/naren/Desktop/project/React/confusion/src/Redux/ActionTypes.js",[],"/home/naren/Desktop/project/React/confusion/src/Redux/ActionCreators.js",[],"/home/naren/Desktop/project/React/confusion/src/shared/baseUrl.js",[],"/home/naren/Desktop/project/React/confusion/src/Redux/comments.js",[],["98","99"],"/home/naren/Desktop/project/React/confusion/src/components/MenuComponent.js",["100","101","102"],"/home/naren/Desktop/project/React/confusion/src/App.js",["103"],"import React, {Component} from \"react\";\nimport { Form } from \"reactstrap\";\nimport './App.css';\nimport Main from \"./components/MainComponent\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConfigureStore } from \"./Redux/configureStore\";\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store = {store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","/home/naren/Desktop/project/React/confusion/src/index.js",[],"/home/naren/Desktop/project/React/confusion/src/components/AboutComponent.js",[],"/home/naren/Desktop/project/React/confusion/src/Redux/dishes.js",[],"/home/naren/Desktop/project/React/confusion/src/Redux/forms.js",[],"/home/naren/Desktop/project/React/confusion/src/components/ContactComponent.js",["104","105","106","107","108","109","110","111","112"],"import React, {Component} from \"react\";\nimport { Breadcrumb, BreadcrumbItem,Row, Button, Col, Label } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, Form, Errors } from \"react-redux-form\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component{\n    \n    constructor(props){\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message);\n        this.props.resetFeedbackForm();\n    }\n\n    render(){\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Contact Us</h3>\n                            <hr />\n                        </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br/>\n                            Clear Water Bay, Kowloon<br/>\n                            HONG KONG<br/>\n                            <i class=\"fa fa-phone\"></i>: +852 1234 5678<br/>\n                            <i class=\"fa fa-fax\"></i>: +852 8765 4321<br/>\n                            <i class=\"fa fa-envelope\"></i>\n                       </address>\n                    </div>\n                    <div class=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div class=\"col-12 col-sm-11 offset-sm-1\">\n                        <div class=\"btn-group\" role=\"group\">\n                        <a role=\"button\" class=\"btn btn-primary\" href=\"tel:+85212345678\"><i class=\"fa fa-phone\"></i>call\n                        </a>\n                        <a role=\"button\" class=\"btn btn-info\"><i class=\"fa fa-skype\"> skype\n                        </i></a>\n                        <a role=\"button\" class=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i class=\"fa fa-envelope-o\"> mail\n                        </i></a>\n                        </div>\n                    </div>\n                </div>\n        \n                <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send Us Your Feedback</h3>\n                   </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model = \"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className =\"form-control\"\n                                        validators = {{\n                                            required,minLength : minLength(3),maxLength : maxLength(15)\n                                        }}\n                                    />\n                                    <Errors className =\"text-danger\"\n                                            model = \".firstname\"\n                                            show = \"touched\"\n                                            messages = {{\n                                                required : \"Required\",\n                                                minLength : \"Must be greater than 2 character\",\n                                                maxLength : \"Must be less than 15 character\"\n                                            }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className = \"form-control\"\n                                        validators = {{\n                                            required,minLength : minLength(3),maxLength : maxLength(15)\n                                        }}\n                                    />\n                                    <Errors className =\"text-danger\"\n                                            model = \".lastname\"\n                                            show = \"touched\"\n                                            messages = {{\n                                                required : \"Required\",\n                                                minLength : \"Must be greater than 2 character\",\n                                                maxLength : \"Must be less than 15 character\"\n                                            }}\n                                    />\n                                </Col>                        \n                            </Row>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. number\"\n                                        className = \"form-control\" \n                                        validators = {{\n                                            required,minLength : minLength(3),maxLength : maxLength(15),isNumber\n                                        }}\n                                    />\n                                <Errors className =\"text-danger\"\n                                            model = \".telnum\"\n                                            show = \"touched\"\n                                            messages = {{\n                                                required : \"Required\",\n                                                minLength : \"Must be greater than 2 number\",\n                                                maxLength : \"Must be less than 15 number\",\n                                                isNumber : \"Must be Number\"\n                                            }}\n                                    /> \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className = \"form-control\"\n                                        validators = {{\n                                            required,validEmail\n                                        }}\n                                    />\n                                    <Errors className =\"text-danger\"\n                                            model = \".email\"\n                                            show = \"touched\"\n                                            messages = {{\n                                                required : \"Required\",\n                                                validEmail : \"Invalid Email\"\n                                            }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className = \"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model =\".agree\"\n                                                name=\"agree\"\n                                                className = \"form-check-input\"    \n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model =\".contactType\" name=\"contactType\"\n                                                    className = \"form-control\"\n                                    >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model =\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\" className = \"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n               </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default Contact;","/home/naren/Desktop/project/React/confusion/src/components/FooterComponent.js",["113","114","115"],{"ruleId":"116","severity":1,"message":"117","line":34,"column":3,"nodeType":"118","messageId":"119","endLine":36,"endColumn":4},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":2,"column":106,"nodeType":"126","messageId":"127","endLine":2,"endColumn":109},{"ruleId":"124","severity":1,"message":"128","line":2,"column":126,"nodeType":"126","messageId":"127","endLine":2,"endColumn":138},{"ruleId":"129","severity":1,"message":"130","line":33,"column":63,"nodeType":"131","messageId":"132","endLine":33,"endColumn":64},{"ruleId":"124","severity":1,"message":"133","line":2,"column":24,"nodeType":"126","messageId":"127","endLine":2,"endColumn":38},{"ruleId":"134","severity":1,"message":"135","line":50,"column":33,"nodeType":"136","endLine":50,"endColumn":110},{"ruleId":"134","severity":1,"message":"137","line":60,"column":33,"nodeType":"136","endLine":66,"endColumn":35},{"ruleId":"134","severity":1,"message":"138","line":80,"column":33,"nodeType":"136","endLine":83,"endColumn":35},{"ruleId":"120","replacedBy":"139"},{"ruleId":"122","replacedBy":"140"},{"ruleId":"124","severity":1,"message":"141","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":15},{"ruleId":"124","severity":1,"message":"142","line":3,"column":41,"nodeType":"126","messageId":"127","endLine":3,"endColumn":49},{"ruleId":"124","severity":1,"message":"143","line":3,"column":51,"nodeType":"126","messageId":"127","endLine":3,"endColumn":59},{"ruleId":"124","severity":1,"message":"144","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"145","line":4,"column":32,"nodeType":"126","messageId":"127","endLine":4,"endColumn":34},{"ruleId":"146","severity":1,"message":"147","line":60,"column":25,"nodeType":"136","endLine":60,"endColumn":63},{"ruleId":"134","severity":1,"message":"137","line":77,"column":37,"nodeType":"136","endLine":83,"endColumn":39},{"ruleId":"134","severity":1,"message":"137","line":98,"column":37,"nodeType":"136","endLine":104,"endColumn":39},{"ruleId":"134","severity":1,"message":"137","line":119,"column":37,"nodeType":"136","endLine":125,"endColumn":39},{"ruleId":"134","severity":1,"message":"137","line":141,"column":37,"nodeType":"136","endLine":147,"endColumn":39},{"ruleId":"134","severity":1,"message":"148","line":162,"column":45,"nodeType":"136","endLine":165,"endColumn":47},{"ruleId":"134","severity":1,"message":"135","line":171,"column":37,"nodeType":"136","endLine":173,"endColumn":38},{"ruleId":"134","severity":1,"message":"138","line":182,"column":37,"nodeType":"136","endLine":184,"endColumn":39},{"ruleId":"124","severity":1,"message":"149","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"124","severity":1,"message":"150","line":2,"column":18,"nodeType":"126","messageId":"127","endLine":2,"endColumn":29},{"ruleId":"124","severity":1,"message":"151","line":2,"column":31,"nodeType":"126","messageId":"127","endLine":2,"endColumn":40},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'FormFeedback' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'CardImgOverlay' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["152"],["153"],"'Media' is defined but never used.","'CardText' is defined but never used.","'CardBody' is defined but never used.","'Form' is defined but never used.","'ns' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","'Jumbotron' is defined but never used.","no-global-assign","no-unsafe-negation"]